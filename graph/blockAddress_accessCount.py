# -*- coding: utf-8 -*-
"""rank-access_num.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gyKktsAkY5m_5af7Z28KF8ED5vwmDKm3
"""

import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
import argparse
import os
import sys


def main(read_file_name):
  index = read_file_name.rfind(".")
  output_img_name = read_file_name[:index]
  df = pd.read_csv(read_file_name,
                 skipinitialspace=True, delim_whitespace=True, lineterminator="\n", 
                 comment='='
                 )

  #only readi
  groupdf['readicount'] = groupdf['count']
  groupdf.loc[(groupdf.type!='readi'), 'readicount'] = 0
  #only readd
  groupdf['readdcount'] = groupdf['count']
  groupdf.loc[(groupdf.type!='readd'), 'readdcount'] = 0
  #only write
  groupdf['writecount'] = groupdf['count']
  groupdf.loc[(groupdf.type!='write'), 'writecount'] = 0

  plt.style.use('default')
  plt.rcParams['figure.figsize'] = (12, 10)
  #plt.rcParams['font.size'] = 12

  fig, ax = plt.subplots(figsize=(12,10))
  x = groupdf['block_address']
  y1 = groupdf['readicount']
  y2 = groupdf['readdcount']
  y3 = groupdf['writecount']

  plt.scatter(x, y3, color='red', label='write')
  plt.scatter(x, y2, color='blue', label='read data')
  plt.scatter(x, y1, color='yellow', label='read instruction')

  ax.set_xlabel('blockaddress')
  ax.set_ylabel('count')
  ax.legend(loc='best')

  plt.savefig(f'{output_img_name}_blockAddress_accessCount.png')

def is_valid_file(parser, arg):
  if not os.path.exists(arg):
      parser.error("The file %s does not exist" % arg)
  else:
      return arg


if __name__ == "__main__":
  parser = argparse.ArgumentParser(description = 'draw x-ranking(LRU) y-accessCount graph linear scale')
  parser.add_argument("-i", dest="filename", required=True,
                    help="input ranking-accessCount data",
                    type=lambda x: is_valid_file(parser, x))
  args = parser.parse_args()
  main(args.filename)
