# -*- coding: utf-8 -*-
"""rank-access_num.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gyKktsAkY5m_5af7Z28KF8ED5vwmDKm3
"""

import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
import argparse
import os
import sys

def save_graph(df, output_img_name, x_name, y_name, x_label, y_label):
  plt.style.use('default')
  plt.rcParams['figure.figsize'] = (12, 10)

  fig, ax = plt.subplots(figsize=(12,10))
  x = df[x_name]
  y = df[y_name]

  plt.scatter(x, y, color='blue', s=1)

  ax.set_xlabel(x_label)
  ax.set_ylabel(y_label)
  ax.legend(loc='best')
  plt.savefig(f'{output_img_name}_linearscale.png') # save linear scale graph
  
  ax.set_xscale('log')
  ax.set_yscale('log')
  plt.savefig(f'{output_img_name}_logscale.png') #save log scale graph

def main(read_file_name):
  index = read_file_name.rfind(".")
  output_img_name = read_file_name[:index]
  df = pd.read_csv(read_file_name,
                 skipinitialspace=True, delim_whitespace=True, lineterminator="\n", 
                 comment='=' ## Convert address to page(4KB)
                 )

  save_graph(df, output_img_name, 'rank', 'access_number', 'LRU rank', 'access count')
  df['access_cum'] = df['access_number'].cumsum()
  df['access_cum_perc'] = 100 * df['access_cum']/df['access_number'].sum()
  save_graph(df, f"{output_img_name}_accumulated", 'rank', 'access_cum_perc', 'LRU rank', 'accumulative access count\(\%\)')

def is_valid_file(parser, arg):
  if not os.path.exists(arg):
      parser.error("The file %s does not exist" % arg)
  else:
      return arg


if __name__ == "__main__":
  parser = argparse.ArgumentParser(description = 'draw x-ranking(LRU) y-accessCount graph linear scale')
  parser.add_argument("-i", dest="filename", required=True,
                    help="input ranking-accessCount data",
                    type=lambda x: is_valid_file(parser, x))
  args = parser.parse_args()
  main(args.filename)
  
